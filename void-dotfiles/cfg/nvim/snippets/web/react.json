{
  "React Function Component": {
    "prefix": "rfc",
    "body": [
      "export default function ${1:Component}() {",
      "  return (",
      "    <div>",
      "      Hello from ${1:Component}!",
      "    </div>",
      "  );",
      "}"
    ],
    "description": "Create a React function component with export default"
  },
  "React Functional Component": {
    "prefix": ["rfcn", "rfce"],
    "body": [
      "export const ${1:Component} = () => {",
      "  return (",
      "    <div>",
      "      Hello from ${1:Component}!",
      "    </div>",
      "  );",
      "};"
    ],
    "description": "Creates a basic React functional component"
  },
  "reactFunctionMemoComponent": {
    "prefix": "rmc",
    "body": [
      "import { memo } from 'react'",
      "",
      "export default memo(function ${1:${TM_FILENAME_BASE}}() {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t$0",
      "\t\t</div>",
      "\t)",
      "})"
    ],
    "description": "Creates a React Memo Function Component"
  },
  "useSelector": {
    "prefix": "useSelector",
    "body": ["const ${1:state} = useSelector(state => state.${1:state})"]
  },
  "useDispatch": {
    "prefix": "useDispatch",
    "body": ["const dispatch = useDispatch()"]
  },
  "jsx element": {
    "prefix": "j",
    "body": "<${1}>\n\t$0\n</${1}>",
    "description": "an element"
  },
  "jsx element self closed": {
    "prefix": "jc",
    "body": "<${0:elementName} />",
    "description": "an element self closed"
  },
  "jsx return element": {
    "prefix": "jr",
    "body": ["return (", "  <>", "    ${0}", "  </>", ")"],
    "description": "return an element"
  },
  "jsx elements map": {
    "prefix": "jm",
    "body": "{${1:array}.map((item) => <${2:elementName} key={item.id}>\n\t$0\n</${2}>)}",
    "description": "an element self closed"
  },
  "jsx elements map with return": {
    "prefix": "jmr",
    "body": "{${1:array}.map((item) => {\n\treturn <${2:elementName} key={item.id}>\n\t$0\n</${2}>\n})}",
    "description": "an element self closed"
  },
  "reactCustomHook": {
    "prefix": "rch",
    "body": [
      "export const ${1:${TM_FILENAME_BASE}} = (${2}) => {",
      "\t$0",
      "}"
    ],
    "description": "Creates a React Custom Hook with ES7 module system"
  },
  "Create useState hook": {
    "prefix": ["uss", "ust"],
    "body": [
      "const [${1:state}, set${2:State}] = useState(${3:defaultState});"
    ],
    "description": "Creates React useState hook"
  },
  "Create useEffect hook": {
    "prefix": ["use", "uef"],
    "body": ["useEffect(() => {", "\t$0", "}, []);"],
    "description": "Creates React useEffect hook"
  },
  "Create useContext hook": {
    "prefix": "usc",
    "body": ["const ${1:value} = useContext(MyContext);"],
    "description": "Creates React useContext hook"
  },
  "Create useReducer hook": {
    "prefix": "usd",
    "body": [
      "const [${1:state}, dispatch] = useReducer(${2:reducer}, initialState);"
    ],
    "description": "Creates React useReducer hook"
  },
  "Create useRef hook": {
    "prefix": "usr",
    "body": ["const ${1:refContainer} = useRef(${2:initialValue});"],
    "description": "Creates React useRef hook"
  },
  "Create useImperativeHandle hook": {
    "prefix": "usi",
    "body": ["useImperativeHandle(${1:initialValue}, () => {", "\t", "}, []);"],
    "description": "Creates React useImperativeHandle hook"
  },
  "Create useLayoutEffect hook": {
    "prefix": "usl",
    "body": ["useLayoutEffect(() => {", "\t", "}, []);"],
    "description": "Creates React useLayoutEffect hook"
  },
  "Import React": {
    "prefix": "imr",
    "body": ["import React from 'react';"],
    "description": "Imports React"
  }
}
